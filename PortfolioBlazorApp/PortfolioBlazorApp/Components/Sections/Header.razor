@inject IJSRuntime JSRuntime

<header class="header" @ref="headerRef">
    <div class="container">
        <div class="logo">
            <a class="nav-link"  href="/" @onclick='() => ScrollToFragment("")'>Kristofferström<span>.</span></a>
        </div>

        <nav class="nav-menu">
            <a class="@(_currentSectionId == "skills" ? "active nav-link" : "nav-link")" href="#skills" @onclick='() => ScrollToFragment("skills")'>Skills</a>
            <a class="@(_currentSectionId == "projects" ? "active nav-link" : "nav-link")" href="#projects" @onclick='() => ScrollToFragment("projects")'>Projects</a>
            <a class="@(_currentSectionId == "contact" ? "active nav-link" : "nav-link")" href="#contact" @onclick='() => ScrollToFragment("contact")'>Contact</a>

        </nav>

      
      

    </div>
</header>

@code {
    ElementReference headerRef;
    private string _currentSectionId = "";

    private async Task ScrollToFragment(string elementId)
    {
        await JSRuntime.InvokeVoidAsync("blazorHelpers.scrollToFragment", elementId);
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var dotnetHelper = DotNetObjectReference.Create(this);
            await JSRuntime.InvokeVoidAsync("scrollHandler.listenForScroll", dotnetHelper);
        }
    }

    [JSInvokable]
    public void OnScroll(string currentSectionId)
    {
        if(_currentSectionId != currentSectionId)
        {
            _currentSectionId = currentSectionId;
            StateHasChanged();
        }
       
    }
}

<script>

    window.scrollHandler = {
        listenForScroll: function (dotnetHelper) {
            window.onscroll = function () {
                var sections = document.querySelectorAll('section');
                var currentSectionId = "";

                sections.forEach(function (section) {
                    var sectionTop = section.offsetTop;
                    var sectionHeight = section.offsetHeight;

                    if (pageYOffset >= (sectionTop - sectionHeight / 3) && pageYOffset < (sectionTop + sectionHeight - sectionHeight / 3)) {
                        currentSectionId = section.id;
                    }
                });

                dotnetHelper.invokeMethodAsync('OnScroll', currentSectionId);
            }
        }
    };

    window.blazorHelpers = {
        scrollToFragment: (elementId) => {
            var element = document.getElementById(elementId);

            if (element) {
                window.scrollTo(0, element.offsetTop);
            }
        }
    };

</script>
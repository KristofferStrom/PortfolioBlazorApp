  @page "/custom-components"

<div class="custom-components-page">
    <div class="container">
        <div class="exit-section">
            <TitleComponent Title="Custom Components" />
            <button class="btn btn-secondary" @onclick="CloseModal"><i class="fa-regular fa-xmark-large"></i></button>
        </div>

        <div class="title-section">
            <h4>Some of my custom Blazor components.</h4>
        </div>

        <div class="components-section">
            <div class="component">
                <div class="description">
                    <h5>Generic Dropdown</h5>
                    <p>Due to difficulties styling select elements in Razor code, I have created this generic dropdown component.</p>
                </div>
                <div class="content">
                    <Dropdown Title="Change border color" Options='new List<string> {"green", "blue", "white"}' BackgroundColor="var(--color-gray-medium)" BorderColor="@_borderColor" OnValueChanged="ChangeBorderColor" />
                     <div class="animal-dropdown">
                        <Dropdown Title="Change animal icon" Options='new List<string> {"hippo", "cat", "dog"}' BackgroundColor="var(--color-gray-medium)" BorderColor="var(--color-text-primary)" OnValueChanged="ChangeAnimal" />
                        <i class="fa-solid fa-@(_animal) animal-icon"></i>
                     </div>
                    
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Action CloseModal { get; set; }

    private string _borderColor =  "var(--color-secondary)";
    private string _animal = "hippo";


    private void ChangeBorderColor(string color)
    {
        if(color == null)
            _borderColor = "var(--color-secondary)";
        else 
            _borderColor = color;
    }

    private void ChangeAnimal(string animal)
    {
        if(animal == null)
            _animal = "hippo";
        else 
            _animal = animal;
    }
}
